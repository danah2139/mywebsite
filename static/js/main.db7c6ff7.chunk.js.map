{"version":3,"sources":["components/SocialNetworks.js","components/About.js","components/Projects.js","components/Experience.js","components/Education.js","components/Skills.js","App.js","serviceWorker.js","index.js","assets/img/Dana-Cohen.jpg"],"names":["SocialNetworks","props","socialNetworks","react_default","a","createElement","socialNet","map","socialNetwork","key","name","href","url","target","rel","className","About","_ref","avatar","profession","bio","phone","address","src","alt","components_SocialNetworks","Projects","myProjects","projects","pro","pl","link","description","Experience","myExperience","experience","exp","jobTitle","company","startDate","endDate","jobDescription","Education","myEducation","education","edu","degree","institution","Skills","mySkills","skills","skll","style","width","percentage","App","person","img","email","components_About","components_Experience","components_Education","components_Projects","components_Skills","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.db7c6ff7.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\n\r\nconst SocialNetworks = (props) => {\r\n  const socialNetworks = (\r\n    <ul>\r\n      {props.socialNet.map((socialNetwork) =>\r\n        <li key={socialNetwork.name}>\r\n          <a href={socialNetwork.url} target='_blank' rel=\"noopener noreferrer\">\r\n            <i className={'fa fa-' + socialNetwork.name + '-square'}></i>\r\n          </a>\r\n        </li>\r\n      )}\r\n    </ul>\r\n  );\r\n  return (\r\n    <div className=\"socialNet\">\r\n      {socialNetworks}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default SocialNetworks;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SocialNet from './SocialNetworks';\r\n\r\nconst About = ({avatar, name, profession, bio,phone,address, socialNet}) => {\r\n    return(\r\n        <div className='bio'>\r\n            <img src={avatar} alt ={name}/>\r\n            <div className='title'>\r\n                <h1>{name}</h1>\r\n                <h2>{profession}</h2>\r\n            </div>\r\n            <div className='desc'>\r\n                <p>{bio}</p>\r\n            </div>\r\n            <div className='desc'>\r\n                <i className='fa fa-map-marker'></i>\r\n                <p>{address}</p>\r\n            </div>\r\n            <div className = 'desc'>\r\n                <i className='fa fa-mobile'></i>\r\n                <p>{phone}</p>\r\n            </div>\r\n            <SocialNet socialNet={socialNet} />\r\n        </div>\r\n    );\r\n};\r\n  \r\nAbout.propTypes = {\r\n    avatar: PropTypes.string,\r\n    name: PropTypes.string,\r\n    profession: PropTypes.string,\r\n    bio: PropTypes.string,\r\n    address: PropTypes.string,\r\n    phone:PropTypes.string,\r\n    socialNet: PropTypes.node\r\n};\r\n  \r\nexport default About;","import React from 'react';\r\n\r\nconst Projects = (props) => {\r\n  const myProjects = (\r\n    <div>\r\n    {props.projects.map((pro) =>\r\n      <div className='item' key={pro.pl}>\r\n        <h3>{pro.pl} </h3>\r\n        <a href= {pro.link}>\r\n          <p>{pro.description}</p>\r\n        </a>\r\n      </div>\r\n    )}\r\n  </div>\r\n  );\r\n  return (\r\n    <div className=\"title\">\r\n        <i className='fa fa-file-code-o'></i>\r\n        <h2>PROJECTS</h2>\r\n        {myProjects}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Projects;","import React from 'react';\r\n\r\n\r\n const Experience = (props) => {\r\n    const myExperience = (\r\n      <div>\r\n        {props.experience.map((exp) =>\r\n          <div className='item' key={exp.jobTitle}>\r\n            <h3>{exp.jobTitle} @ {exp.company} <span>{exp.startDate} - {exp.endDate}</span></h3>\r\n            <p>{exp.jobDescription}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n    return (\r\n      <div className='title'>\r\n        <i className='fa fa-briefcase'></i>\r\n        <h2>EXPERIENCE</h2>\r\n        {myExperience}\r\n      </div>\r\n    )\r\n  };\r\n\r\n\r\nexport default Experience;","import React from 'react';\r\n\r\n\r\n\r\n const Education = (props) => {\r\n    const myEducation = (\r\n      <div>\r\n        {props.education.map((edu) =>\r\n          <div className='item' key={edu.degree}>\r\n            <h3>{edu.degree} @ {edu.institution} <span>{edu.startDate} - {edu.endDate}</span></h3>\r\n            <p>{edu.description}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n    return (\r\n      <div className='title'>\r\n        <i className=\"fa fa-university\"></i>\r\n        <h2>EDUCATION</h2>\r\n        {myEducation}\r\n      </div>\r\n    )\r\n  };\r\n\r\n\r\nexport default Education;","import React from 'react';\r\n\r\nconst Skills = (props) => {\r\n  const mySkills = (\r\n    <div>\r\n      {props.skills.map((skll) =>\r\n        <div className='item w33' key={skll.pl}>\r\n          <h3>{skll.pl}</h3>\r\n          <div className='skills'>\r\n            <span style={{width: skll.percentage}}></span>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n  return (\r\n    <div className='title'>\r\n      <i className='fa fa-percent'></i>\r\n      <h2>SKILLS</h2>\r\n      {mySkills}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Skills;","import React,{Component} from 'react';\r\nimport About from './components/About';\r\nimport Projects from './components/Projects'\r\nimport Experience from './components/Experience';\r\nimport Education from './components/Education';\r\nimport Skills from './components/Skills';\r\nimport img from './assets/img/Dana-Cohen.jpg';\r\n\r\n\r\nclass App extends Component {\r\n  render(){\r\n    const person = {\r\n      avatar: img,\r\n      name: 'Dana Cohen',\r\n      profession: ' Software Developer ',\r\n      bio:' Highly motivated. Team player. Passionate for writing code. Self - learner. Eager to learn new technologies . With valid security classification.',\r\n      address: 'Aduvdevan 26 Ashkelon Isreal',\r\n      email:'danah2139@gmail.com',\r\n      phone:'050-9912802',\r\n      socialNet: [\r\n          {name:'envelope', url:'mailto:danah2139@gmail.com'},\r\n          {name: 'github', url: 'https://github.com/danah2139'},\r\n          {name: 'linkedin', url: 'https://www.linkedin.com/in/dana-cohen-5176b514b/'}\r\n      ],\r\n      experience: [\r\n          {jobTitle: 'Software Developer – Student', company: '- Ministry Of Defense – \"Malmab\" Department ', startDate: 'Fab 2018', endDate: 'September 2019', jobDescription:' Member of Developing team - programming in python and react.js' },\r\n          {jobTitle: 'Qa - Student', company: 'Tax Authority- Data Systems Management', startDate: 'Dec 2016', endDate: 'Fab 2018', jobDescription: 'Member of the technical support team  Department of Human Resources Israel Tax Authority .Responsible for maintenance the software by making QA tests.'},\r\n      ],\r\n      education: [\r\n          {degree: 'BSc Computer Science', institution: 'Jct- Lev Academic Center', startDate: 'Oct 2015', endDate: 'Jul 2019', description: ''},\r\n  \r\n      ],\r\n      skills: [\r\n          {pl: 'Python', percentage: '97%'},\r\n          {pl: 'Java', percentage: '95%'},\r\n          {pl: 'C#', percentage: '90%'},\r\n          {pl: 'C++', percentage: '90%'}\r\n      ],\r\n      projects:[\r\n        {pl:'C#' ,description:'Health Tracker System ',link:\"https://github.com/danah2139/HealthTracker\"},\r\n        {pl:'Java' ,description:'Computer Engineering- generating 3D pictures',link:\"https://github.com/danah2139/GeneratePic\"},\r\n        {pl:'Java' ,description:'2 Android applications for managing Car Rental Company',link:\"https://github.com/danah2139/TakeNGo--client\"},\r\n        {pl:'Python' ,description:'Web Blog -using flask Framework',link:\"https://github.com/danah2139/myblogapp\"},\r\n        {pl:'SQL' ,description:'Learning the language and creating a database in PL SQL Developer',link:\"\"}\r\n      ]\r\n  };\r\n    return (\r\n      <header>\r\n        <div className='wrapper'>\r\n          <div className='sidebar'>\r\n            <About \r\n              avatar={person.avatar} \r\n              name={person.name} \r\n              profession={person.profession}\r\n              bio={person.bio}\r\n              address={person.address}\r\n              phone = {person.phone}\r\n              socialNet={person.socialNet}\r\n            />           \r\n          </div>\r\n\r\n        <div className='content-wrapper'>\r\n            <div className='content'>\r\n               <Experience experience = {person.experience} />\r\n               <Education education={person.education}/>\r\n               < Projects projects={person.projects}/>\r\n               <Skills skills={person.skills}/>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    </header>    \r\n  );\r\n  }\r\n  \r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render( <App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/Dana-Cohen.e564b00b.jpg\";"],"sourceRoot":""}